%import common.WS_INLINE
%import common.ESCAPED_STRING -> STRING
%declare _INDENT _DEDENT
%ignore WS_INLINE
%ignore COMMENT

start: (_NEWLINE? state)+
state: state_name _NEWLINE [_INDENT init? exit? event_handler* state* _DEDENT]

init: "#init" _NEWLINE actions
exit: "#exit" _NEWLINE actions
event_handler: unguarded_event_handler
             | guarded_event_handler

unguarded_event_handler: event target
guarded_event_handler: event _NEWLINE _INDENT guarded_transition+ else_transition? _DEDENT

guarded_transition: "[" guard "]" target
else_transition: "[" "else" "]" target

target: "->" state_path _NEWLINE [actions]
actions: _INDENT (action _NEWLINE)+ _DEDENT
event: "@" ("_" | event_name)

action: STRING
guard: STRING
state_name: NAME
event_name: NAME
state_path: STATE_PATH

COMMENT: _NEWLINE? /\/\/.*/
STATE_PATH: ("../")* (NAME"/")* NAME
NAME: LOWER_CASE
    | CAMEL_CASE
    | UPPER_CASE
    | LOWER_CAMEL_CASE
LOWER_CASE: /([a-z]+_?)*[a-z]/
UPPER_CASE: /([A-Z]+_?)*[A-Z]/
CAMEL_CASE: /([A-Z][a-z]+)+/
LOWER_CAMEL_CASE: /([a-z]+[A-Z][a-z]+)+/
_NEWLINE: /(\r?\n[\t ]*)+/