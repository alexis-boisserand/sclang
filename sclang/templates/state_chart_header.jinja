{% import 'state_chart.jinja' as sc with context %}
{% extends 'header_base.jinja' %}

{% block description %}
 * Declarations for the {{state_chart_name}} statechart.
{% endblock %}

{% block decl %}

typedef enum
{
{% for event in state_chart.event_names %}
    {{ sc.event_enum_name(event) }}{% if not loop.last %},{% endif %}{{- '\n' -}}
{%- endfor %}
} {{ sc.event_type }};

{% for state in state_chart.all_states %}
{% if not state.is_atomic %}
typedef enum
{
{% for substate in state.states %}
    {{ sc.state_enum_name(substate) }}{% if not loop.last %},{% endif %}{{- '\n' -}}
{% endfor %}
} {{ type(sc.ns, *(state.path_elements + ['state'])) }};

{% endif %}
{%- endfor %}
typedef struct
{
{% for state in state_chart.all_states %}
{% if not state.is_atomic %}
    {{ type(sc.ns, *(state.path_elements + ['state'])) }} {{ sc.state_field_name(state) }};
{% endif %}
{%- endfor %}
} {{ sc.state_chart_type }};

{{ sc.init_sig }};
{{ sc.event_handler_sig }};

{% endblock %}
