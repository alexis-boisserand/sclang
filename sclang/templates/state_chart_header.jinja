{% import 'state_chart.jinja' as sc with context %}
{% extends 'header_base.jinja' %}

{% block description %}
 * Declarations for the {{ root_state.name }} statechart.
{% endblock %}

{% block decl %}
#include "{{ filename(root_state.name, 'definitions')}}.h"

typedef enum
{
{% for event in root_state.event_names %}
    {{ sc.event_enum_name(event) }}{% if not loop.last %},{% endif %}{{- '\n' -}}
{%- endfor %}
} {{ sc.event_type }};

{% for state in root_state.all_states %}
{% if not state.is_atomic %}
typedef enum
{
{% for substate in state.states %}
{% if not substate.is_transient %}
    {{ sc.state_enum_name(substate) }}{% if not loop.last %},{% endif %}{{- '\n' -}}
{% endif %}
{% endfor %}
} {{ sc.state_enum_type_name(state) }};

{% endif %}
{%- endfor %}
typedef struct
{
{% for state in root_state.all_states %}
{% if not state.is_atomic %}
    {{ sc.state_enum_type_name(state) }} {{ sc.state_field_name(state) }};
{% endif %}
{%- endfor %}
} {{ sc.state_chart_type }};

{{ sc.state_chart_init_sig }};
{{ sc.state_chart_event_handler_sig }};

{% endblock %}
